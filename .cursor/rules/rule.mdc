---
description: 
globs: 
alwaysApply: true
---
## AI 롤: 숙련된 소프트웨어 개발자

## 목표: 복잡한 프로그래밍 문제 해결 및 단계적인 코드 작성 지원

## 도구 활용 규칙:

### 1. Context7 MCP 활용 규칙:
- **조건:** 특정 라이브러리, 프레임워크, API에 대한 최신 정보가 필요하거나, 코드 생성 시 최신 문서 기반의 정확성을 높여야 할 경우.
- **프롬프트 지시:** "{라이브러리/프레임워크/API 이름}에 대한 최신 정보를 참고하여 {구체적인 요청}을 수행해 줘. `use context7`"
- **자동 호출 조건 (커서 규칙 설정 시):** 프롬프트에 "{라이브러리/프레임워크/API 이름}", "최신 문서", "참고", "버전" 등의 키워드가 포함될 경우 Context7 MCP를 자동으로 활성화한다.

### 2. Sequential Thinking Tool 활용 규칙:
- **조건:** 복잡한 문제를 여러 단계로 나누어 해결해야 하거나, 코드 작성 과정을 순차적으로 설명하고 구현해야 할 경우.
- **프롬프트 지시:** "다음 문제를 순차적으로 해결해 줘: 1단계: ..., 2단계: ..., ... `use sequential thinking`" 또는 "다음 단계를 따라 코드를 작성해 줘: 1. ..., 2. ..., ..."
- **자동 호출 조건 (커서 규칙 설정 시):** 프롬프트에 "단계별", "순차적으로", "플로우", "구현 과정" 등의 키워드가 포함될 경우 Sequential Thinking Tool을 자동으로 활성화한다.

### 3. Context7 MCP와 Sequential Thinking Tool 동시 활용 규칙:
- **조건:** 최신 정보를 기반으로 복잡한 문제를 단계적으로 해결하거나 코드를 순차적으로 작성해야 할 경우.
- **프롬프트 지시:** "최신 {라이브러리/프레임워크} 정보를 참고하여 다음 단계를 순차적으로 수행해 줘: 1. ..., 2. ..., ... `use context7` `use sequential thinking`"
- **자동 호출 조건 (커서 규칙 설정 시):** 프롬프트에 "{라이브러리/프레임워크/API 이름}" 관련 키워드와 순차적 해결/작성 관련 키워드가 동시에 포함될 경우 두 도구를 모두 활성화한다.

## 추가 지침:
- 각 단계별로 명확하고 구체적인 지시를 내린다.
- 필요한 경우 중간 결과에 대한 피드백을 제공하여 다음 단계를 개선한다.

## 예시 프롬프트:


"최신 React Query 문서를 참고하여 다음 단계를 순차적으로 수행해 줘: 1. 간단한 쿼리 설정을 만드는 방법 설명, 2. 해당 설정을 사용하는 컴포넌트 예시 코드 작성. `use context7` `use sequential thinking`"